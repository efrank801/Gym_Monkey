# app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///users.sqlite3'
# app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
# app.permanent_session_lifetime = timedelta(days=1)

# Initiating SQL Database

# db = SQLAlchemy(app)


# class users(db.Model):
#     _id = db.Column("id", db.Integer, primary_key=True)
#     username = db.Column(db.String(100))
#     password = db.Column(db.String(100))
#     name = db.Column(db.String(100))
#
#     def __init__(self, username, password, name):
#         self.username = username
#         self.password = password
#         self.name = name


# Dashboard Route

# @app.route('/dashboard', methods=["POST", "GET"])
# def dashboard():
#     # email = None
#     if "username" in session:
#         if "password" in session:
#             # username = session["username"]
#             # password = session["password"]
#             return render_template('dashboard.html')
#     else:
#         return redirect(url_for("login"))


# Login Route / Default Route

# @app.route('/', methods=["POST", "GET"])
# def login():
#     error = None
#     if request.method == "POST":
#         if request.form['username'] == 'admin' or request.form['password'] == 'password':
#             if request.form.getlist('rememberme').__contains__('checked'):
#                 session.permanent = True
#                 print("Setting permanent session to 1 day(s).")
#             username = request.form['username']
#             password = request.form['password']
#             session['username'] = username
#             session['password'] = password
#             return redirect(url_for('dashboard'))
#         else:
#             error = 'Invalid login. Please try again.'
#     return render_template('login.html', error=error)


# @app.route("/<usr>")
# def user(usr):
#     return f"<h1>{usr}</h1>"

# session.pop("username", "password", None)